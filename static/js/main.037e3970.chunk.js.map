{"version":3,"sources":["components/MyNavbar/MyNavbar.js","components/CounterRow/CounterRow.js","helpers/data/teamsData.js","helpers/data/countersData.js","helpers/data/characterData.js","components/Counters5v5/Counters5v5.js","App/App.js","serviceWorker.js","index.js"],"names":["MyNavbar","state","isOpen","toggle","_this","setState","react_default","a","createElement","className","Navbar","color","dark","expand","NavbarBrand","href","React","Component","CounterRow","buildHardCounters","props","counterTeams","filter","x","isHardCounter","map","counterTeam","key","counterId","src","oppLeaderImage","title","counterTeamName","alt","buildSoftCounters","renderedRow","this","teamWithCharData","opponentTeam","leaderImage","name","teamsData","getTeams","Promise","resolve","reject","axios","get","then","res","data","catch","err","countersData","getCounters","characterData","getAllCharacters","newCharacters","char","newChar","ability_classes","activate_shard_count","alignment","categories","combat_type","description","gear_levels","pk","power","role","ship","ship_slot","url","getCharactersBySquad","toon1Name","toon2Name","toon3Name","toon4Name","toon5Name","rawCharacters","tempSquad","newToon1","newToon2","newToon3","newToon4","newToon5","push","newSquad","Counters5v5","characters","counters","teams","buildMatchup","matchup","newMatchup","Object","objectSpread","team","id","oppLeaderName","leaderName","oppToon2Name","oppToon3Name","oppToon4Name","oppToon5Name","buildTeam","newTeam","character","characterImg","concat","image","oppLeaderId","base_id","oppToon2Id","oppToon2Image","oppToon3Id","oppToon3Image","oppToon4Id","oppToon4Image","oppToon5Id","oppToon5Image","leaderId","toon2Id","toon2Image","toon3Id","toon3Image","toon4Id","toon4Image","toon5Id","toon5Image","getCharacters","console","error","_this2","_this$state","buildCounterRows","counterMatchups","length","matchupWithData","components_CounterRow_CounterRow","App","react_router_dom","Fragment","components_MyNavbar_MyNavbar","react_router","components_Counters5v5_Counters5v5","path","from","to","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.037e3970.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  // Collapse,\n  Navbar,\n  // NavbarToggler,\n  NavbarBrand,\n  // Nav,\n  // NavItem,\n  // NavLink,\n} from 'reactstrap';\n\nimport './MyNavbar.scss';\n\nclass MyNavbar extends React.Component {\n  state = {\n    isOpen: false,\n  }\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"MyNavbar\">\n        <Navbar color=\"dark\" dark expand=\"md\">\n          <NavbarBrand href=\"/counters5v5\">SWGOH Counters</NavbarBrand>\n          {/* <NavbarToggler onClick={this.toggle} /> */}\n          {/* <Collapse isOpen={this.state.isOpen} navbar> */}\n            {/* <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/5v5/\">5v5</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/3v3/\">3v3</NavLink>\n              </NavItem>\n            </Nav> */}\n          {/* </Collapse> */}\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default MyNavbar;\n","import React from 'react';\n\nimport './CounterRow.scss';\n\nclass CounterRow extends React.Component {\n  buildHardCounters = () => {\n    const { counterTeams } = this.props;\n    const exp = counterTeams\n      .filter(x => x.isHardCounter === true)\n      .map(counterTeam => (\n      <div key={counterTeam.counterId} className=\"countersRow counterCard\">\n        <img\n          className=\"toonImg\"\n          src={counterTeam.oppLeaderImage}\n          title={counterTeam.counterTeamName}\n          alt={counterTeam.counterTeamName}\n        />\n      </div>\n      ));\n    return exp;\n  }\n\n  buildSoftCounters = () => {\n    const { counterTeams } = this.props;\n    const exp = counterTeams\n      .filter(x => x.isHardCounter === false)\n      .map(counterTeam => (\n      <div key={counterTeam.counterId} className=\"countersRow counterCard\">\n        <img\n          className=\"toonImg\"\n          src={counterTeam.oppLeaderImage}\n          title={counterTeam.counterTeamName}\n          alt={counterTeam.counterTeamName}\n        />\n      </div>\n      ));\n    return exp;\n  }\n\n  render() {\n    let renderedRow;\n    if (this.props.teamWithCharData) {\n      const opponentTeam = this.props.teamWithCharData;\n\n      renderedRow = <div className=\"CounterRow\">\n        <div className=\"countersRow col-2 justify-content-center border-dark border-bottom\">\n          <div className=\"opponentCard\">\n            <img\n              className=\"toonImg\"\n              src={opponentTeam.leaderImage}\n              title={opponentTeam.name}\n              alt={opponentTeam.name}\n            />\n          </div>\n        </div>\n        <div className=\"countersRow col-5 border-dark border-bottom border-left border-right\">\n          {this.buildHardCounters()}\n        </div>\n        <div className=\"countersRow col-5 border-dark border-bottom\">\n          {this.buildSoftCounters()}\n        </div>\n      </div>;\n    } else {\n      renderedRow = null;\n    }\n\n    return (\n      <div>\n        {renderedRow}\n      </div>\n    );\n  }\n}\n\nexport default CounterRow;\n","import axios from 'axios';\n\nconst getTeams = () => new Promise((resolve, reject) => {\n  axios.get('https://api.sheety.co/a710e43e-2721-45bb-b722-dafafea5b152')\n    .then((res) => {\n      resolve(res.data);\n    })\n    .catch(err => reject(err));\n});\n\nexport default { getTeams };\n","import axios from 'axios';\n\nconst getCounters = () => new Promise((resolve, reject) => {\n  axios.get('https://api.sheety.co/e505ae20-ec5b-46e8-a86f-7149b9823b64')\n    .then((res) => {\n      resolve(res.data);\n    })\n    .catch(err => reject(err));\n});\n\nexport default { getCounters };\n","import axios from 'axios';\n\nconst getAllCharacters = () => new Promise((resolve, reject) => {\n  axios.get('https://cors-anywhere.herokuapp.com/https://swgoh.gg/api/characters/')\n    .then((res) => {\n      const rawCharacters = res.data;\n      const newCharacters = rawCharacters.map((char) => {\n        const newChar = char;\n        delete newChar.ability_classes;\n        delete newChar.activate_shard_count;\n        delete newChar.alignment;\n        delete newChar.categories;\n        delete newChar.combat_type;\n        delete newChar.description;\n        delete newChar.gear_levels;\n        delete newChar.pk;\n        delete newChar.power;\n        delete newChar.role;\n        delete newChar.ship;\n        delete newChar.ship_slot;\n        delete newChar.url;\n        return newChar;\n      });\n      resolve(newCharacters);\n    })\n    .catch(err => reject(err));\n});\n\nconst getCharactersBySquad = (\n  toon1Name,\n  toon2Name,\n  toon3Name,\n  toon4Name,\n  toon5Name,\n) => new Promise((resolve, reject) => {\n  axios.get('https://cors-anywhere.herokuapp.com/https://swgoh.gg/api/characters/')\n    .then((res) => {\n      const rawCharacters = res.data;\n      const tempSquad = [];\n      const newToon1 = rawCharacters.filter(x => x.name === toon1Name)[0];\n      const newToon2 = rawCharacters.filter(x => x.name === toon2Name)[0];\n      const newToon3 = rawCharacters.filter(x => x.name === toon3Name)[0];\n      const newToon4 = rawCharacters.filter(x => x.name === toon4Name)[0];\n      const newToon5 = rawCharacters.filter(x => x.name === toon5Name)[0];\n      tempSquad.push(newToon1, newToon2, newToon3, newToon4, newToon5);\n      const newSquad = tempSquad.map((char) => {\n        const newChar = char;\n        if (newChar) {\n          delete newChar.ability_classes;\n          delete newChar.activate_shard_count;\n          delete newChar.alignment;\n          delete newChar.categories;\n          delete newChar.combat_type;\n          delete newChar.description;\n          delete newChar.gear_levels;\n          delete newChar.pk;\n          delete newChar.power;\n          delete newChar.role;\n          delete newChar.ship;\n          delete newChar.ship_slot;\n          delete newChar.url;\n        }\n        return newChar;\n      });\n      resolve(newSquad);\n    })\n    .catch(err => reject(err));\n});\n\nexport default { getAllCharacters, getCharactersBySquad };\n","import React from 'react';\n\nimport CounterRow from '../CounterRow/CounterRow';\n\nimport teamsData from '../../helpers/data/teamsData';\nimport countersData from '../../helpers/data/countersData';\nimport characterData from '../../helpers/data/characterData';\n\nimport './Counters5v5.scss';\n\nclass Counters5v5 extends React.Component {\n  state = {\n    characters: [],\n    counters: [],\n    teams: [],\n  }\n\n  buildMatchup = (matchup) => {\n    let matchupToReturn = [];\n    if (matchup) {\n      const { teams } = this.state;\n      const newMatchup = { ...matchup };\n      teams.map((team) => {\n        if (team.id === newMatchup.counterTeam) {\n          newMatchup.oppLeaderName = team.leaderName;\n          newMatchup.oppToon2Name = team.toon2Name;\n          newMatchup.oppToon3Name = team.toon3Name;\n          newMatchup.oppToon4Name = team.toon4Name;\n          newMatchup.oppToon5Name = team.toon5Name;\n          newMatchup.counterTeamName = team.name;\n        } else {\n          return '';\n        }\n        return '';\n      });\n      const newMatchupWithToonInfo = this.buildTeam(newMatchup);\n      matchupToReturn = newMatchupWithToonInfo;\n    } else {\n      return '';\n    }\n    return matchupToReturn;\n  }\n\n  buildTeam = (team) => {\n    const { characters } = this.state;\n    const newTeam = { ...team };\n    characters.map((character) => {\n      const characterImg = `https://swgoh.gg${character.image}`;\n      if (character.name === team.oppLeaderName) {\n        newTeam.oppLeaderId = character.base_id;\n        newTeam.oppLeaderImage = characterImg;\n      } else if (character.name === team.oppToon2Name) {\n        newTeam.oppToon2Id = character.base_id;\n        newTeam.oppToon2Image = characterImg;\n      } else if (character.name === team.oppToon3Name) {\n        newTeam.oppToon3Id = character.base_id;\n        newTeam.oppToon3Image = characterImg;\n      } else if (character.name === team.oppToon4Name) {\n        newTeam.oppToon4Id = character.base_id;\n        newTeam.oppToon4Image = characterImg;\n      } else if (character.name === team.oppToon5Name) {\n        newTeam.oppToon5Id = character.base_id;\n        newTeam.oppToon5Image = characterImg;\n      } else if (character.name === team.leaderName) {\n        newTeam.leaderId = character.base_id;\n        newTeam.leaderImage = characterImg;\n      } else if (character.name === team.toon2Name) {\n        newTeam.toon2Id = character.base_id;\n        newTeam.toon2Image = characterImg;\n      } else if (character.name === team.toon3Name) {\n        newTeam.toon3Id = character.base_id;\n        newTeam.toon3Image = characterImg;\n      } else if (character.name === team.toon4Name) {\n        newTeam.toon4Id = character.base_id;\n        newTeam.toon4Image = characterImg;\n      } else if (character.name === team.toon5Name) {\n        newTeam.toon5Id = character.base_id;\n        newTeam.toon5Image = characterImg;\n      }\n      return '';\n    });\n    return newTeam;\n  }\n\n  getCharacters = () => {\n    characterData.getAllCharacters()\n      .then(res => this.setState({ characters: res }))\n      .catch(err => console.error(err));\n  }\n\n  getCounters = () => {\n    countersData.getCounters()\n      .then(res => this.setState({ counters: res }))\n      .catch(err => console.error(err));\n  }\n\n  getTeams = () => {\n    teamsData.getTeams()\n      .then(res => this.setState({ teams: res }))\n      .catch(err => console.error(err));\n  }\n\n  componentDidMount() {\n    this.getCharacters();\n    this.getTeams();\n    this.getCounters();\n  }\n\n  render() {\n    const { counters, teams } = this.state;\n    const buildCounterRows = teams.map((team) => {\n      const counterMatchups = counters.filter(x => x.opponentTeam === team.id);\n      if (counterMatchups.length > 0) {\n        const counterTeams = [];\n        counterMatchups.map((matchup) => {\n          const matchupWithData = this.buildMatchup(matchup);\n          return counterTeams.push(matchupWithData);\n        });\n        const teamWithCharData = this.buildTeam(team);\n        return <CounterRow\n          counterTeams={counterTeams}\n          key={team.id}\n          teamWithCharData={teamWithCharData}\n        />;\n      }\n      return '';\n    });\n\n    return (\n      <div className=\"Counters5v5\">\n        <div className=\"columnTitles\">\n          <h1 className=\"col-2\">Team</h1>\n          <h1 className=\"col-5\">Hard Counter</h1>\n          <h1 className=\"col-5\">Soft Counter</h1>\n        </div>\n        <div className=\"columnTeams\">\n          {buildCounterRows}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Counters5v5;\n","import React from 'react';\nimport {\n  BrowserRouter, Redirect, Switch,\n} from 'react-router-dom';\n\nimport MyNavbar from '../components/MyNavbar/MyNavbar';\nimport Counters5v5 from '../components/Counters5v5/Counters5v5';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <React.Fragment>\n            <MyNavbar />\n            <div>\n                <Switch>\n                  <Counters5v5 path=\"/counters5v5\" />\n                  {/* <Counters3v3 path=\"/counters3v3\" /> */}\n                  <Redirect from=\"*\" to=\"/counters5v5\" />\n                </Switch>\n            </div>\n          </React.Fragment>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.scss';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}